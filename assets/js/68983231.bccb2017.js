"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=d(n),c=r,k=u["".concat(p,".").concat(c)]||u[c]||s[c]||l;return n?a.createElement(k,i(i({ref:t},m),{},{components:n})):a.createElement(k,i({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={},i="NbtFile",o={unversionedId:"nbt/file",id:"nbt/file",title:"NbtFile",description:"Creating an NbtFile",source:"@site/docs/nbt/file.md",sourceDirName:"nbt",slug:"/nbt/file",permalink:"/deepslate/nbt/file",draft:!1,editUrl:"https://github.com/misode/deepslate/edit/main/website/docs/nbt/file.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"NBT",permalink:"/deepslate/category/nbt"},next:{title:"NbtRegion",permalink:"/deepslate/nbt/region"}},p={},d=[{value:"Creating an NbtFile",id:"creating-an-nbtfile",level:2},{value:"Options",id:"options",level:3},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>write()</code>",id:"write",level:3},{value:"<code>toJson()</code>",id:"toJson",level:3}],m={toc:d};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nbtfile"},"NbtFile"),(0,r.kt)("h2",{id:"creating-an-nbtfile"},"Creating an NbtFile"),(0,r.kt)("p",null,"After obtaining a ",(0,r.kt)("inlineCode",{parentName:"p"},"Uint8Array")," of the file, you can give it to ",(0,r.kt)("inlineCode",{parentName:"p"},"NbtFile.read")," to create an ",(0,r.kt)("inlineCode",{parentName:"p"},"NbtFile"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const response = await fetch('./example.nbt')\nconst arrayBuffer = await response.arrayBuffer()\nconst file = NbtFile.read(new Uint8Array(arrayBuffer, {}))\n")),(0,r.kt)("p",null,"Alternatively, empty files can be created with ",(0,r.kt)("inlineCode",{parentName:"p"},"NbtFile.create"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const file = NbtFile.create({})\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("p",null,"In both cases, you can pass an options argument. For each options property, if it is not given ",(0,r.kt)("inlineCode",{parentName:"p"},"NbtFile.read")," will try to detect it from the binary data. ",(0,r.kt)("inlineCode",{parentName:"p"},"littleEndian")," is not automatically detected, it always defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"''"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"compression")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'gzip' ","|"," 'zlib' ","|"," 'none'")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"none"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"littleEndian")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bedrockHeader")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number ","|"," boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"root")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../type/compound"},(0,r.kt)("inlineCode",{parentName:"a"},"NbtCompound")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"compression")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"'gzip' ","|"," 'zlib' ","|"," 'none'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"littleEndian")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bedrockHeader")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number ","|"," undefined"))))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"write"},(0,r.kt)("inlineCode",{parentName:"h3"},"write()")),(0,r.kt)("p",null,"Turns this file into a ",(0,r.kt)("inlineCode",{parentName:"p"},"Uint8Array"),". Writes the ",(0,r.kt)("inlineCode",{parentName:"p"},"bedrockHeader")," if not ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),". Compresses the data if ",(0,r.kt)("inlineCode",{parentName:"p"},"compression")," is not ",(0,r.kt)("inlineCode",{parentName:"p"},"'none'"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const array = file.write()\n")),(0,r.kt)("h3",{id:"toJson"},(0,r.kt)("inlineCode",{parentName:"h3"},"toJson()")),(0,r.kt)("p",null,"Serializes the file to a format which can be represented by JSON. This can be necessary when using workers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const json = file.toJson()\n// send the data to a different worker\nconst file2 = NbtFile.fromJson(json)\n")))}s.isMDXComponent=!0}}]);