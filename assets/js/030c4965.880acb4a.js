"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[247],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),h=a,m=c["".concat(d,".").concat(h)]||c[h]||u[h]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7937:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={},o="NbtTag",l={unversionedId:"nbt/tag",id:"nbt/tag",title:"NbtTag",description:"Abstract class used by all the NBT types",source:"@site/docs/nbt/tag.md",sourceDirName:"nbt",slug:"/nbt/tag",permalink:"/deepslate/nbt/tag",draft:!1,editUrl:"https://github.com/misode/deepslate/edit/main/website/docs/nbt/tag.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"NbtChunk",permalink:"/deepslate/nbt/chunk"},next:{title:"NbtType",permalink:"/deepslate/nbt/type"}},d={},s=[{value:"Methods",id:"methods",level:2},{value:"<code>isEnd()</code>",id:"isEnd",level:3},{value:"<code>isNumber()</code>",id:"isNumber",level:3},{value:"<code>isArray()</code>",id:"isArray",level:3},{value:"<code>isListOrArray()</code>",id:"isListOrArray",level:3},{value:"<code>getAsNumber()</code>",id:"getAsNumber",level:3},{value:"<code>getAsString()</code>",id:"getAsNumber",level:3},{value:"<code>getId()</code>",id:"getId",level:3},{value:"<code>toString()</code>",id:"toString",level:3},{value:"<code>toPrettyString(indent, depth)</code>",id:"toPrettyString",level:3},{value:"<code>toJson()</code>",id:"toJson",level:3},{value:"<code>toJsonWithId()</code>",id:"toJsonWithId",level:3},{value:"<code>toBytes(output)</code>",id:"toBytes",level:3},{value:"Static methods",id:"static-methods",level:2},{value:"<code>create(id)</code>:",id:"create",level:3},{value:"<code>fromString(input)</code>",id:"fromString",level:3},{value:"<code>fromJson(value, id)</code>",id:"fromJson",level:3},{value:"<code>fromJsonWithId(value)</code>",id:"fromJsonWithId",level:3},{value:"<code>fromBytes(input, id)</code>",id:"fromBytes",level:3}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nbttag"},"NbtTag"),(0,a.kt)("p",null,"Abstract class used by all the ",(0,a.kt)("a",{parentName:"p",href:"../type"},"NBT types")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"isEnd"},(0,a.kt)("inlineCode",{parentName:"h3"},"isEnd()")),(0,a.kt)("p",null,"Whether this tag is of type ",(0,a.kt)("inlineCode",{parentName:"p"},"End"),"."),(0,a.kt)("p",null,"A method exists for each type. They are excluded from the docs for brevity."),(0,a.kt)("h3",{id:"isNumber"},(0,a.kt)("inlineCode",{parentName:"h3"},"isNumber()")),(0,a.kt)("p",null,"Whether this tag is a byte, short, int, long, float or double."),(0,a.kt)("h3",{id:"isArray"},(0,a.kt)("inlineCode",{parentName:"h3"},"isArray()")),(0,a.kt)("p",null,"Whether this tag is a bytearray, intarray or longarray."),(0,a.kt)("h3",{id:"isListOrArray"},(0,a.kt)("inlineCode",{parentName:"h3"},"isListOrArray()")),(0,a.kt)("p",null,"Whether this tag is a list, bytearray, intarray or longarray."),(0,a.kt)("h3",{id:"getAsNumber"},(0,a.kt)("inlineCode",{parentName:"h3"},"getAsNumber()")),(0,a.kt)("p",null,"Returns the ",(0,a.kt)("inlineCode",{parentName:"p"},"number")," representation of this tag. If this is not a number, returns ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,a.kt)("h3",{id:"getAsNumber"},(0,a.kt)("inlineCode",{parentName:"h3"},"getAsString()")),(0,a.kt)("p",null,"Returns the ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," representation of this tag. If this is not a string, returns ",(0,a.kt)("inlineCode",{parentName:"p"},"''"),"."),(0,a.kt)("h3",{id:"getId"},(0,a.kt)("inlineCode",{parentName:"h3"},"getId()")),(0,a.kt)("p",null,"Returns the ",(0,a.kt)("a",{parentName:"p",href:"../type"},(0,a.kt)("inlineCode",{parentName:"a"},"NbtType"))," of this tag."),(0,a.kt)("h3",{id:"toString"},(0,a.kt)("inlineCode",{parentName:"h3"},"toString()")),(0,a.kt)("p",null,"Returns the compact SNBT representation of this tag."),(0,a.kt)("h3",{id:"toPrettyString"},(0,a.kt)("inlineCode",{parentName:"h3"},"toPrettyString(indent, depth)")),(0,a.kt)("p",null,"Returns the compact SNBT representation of this tag. ",(0,a.kt)("inlineCode",{parentName:"p"},"indent")," is the indentation string for each level, it defaults to two spaces. ",(0,a.kt)("inlineCode",{parentName:"p"},"depth")," is the current level, it defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,a.kt)("h3",{id:"toJson"},(0,a.kt)("inlineCode",{parentName:"h3"},"toJson()")),(0,a.kt)("p",null,"Serializes the tag to a format which can be represented by JSON. This can be necessary when using workers."),(0,a.kt)("h3",{id:"toJsonWithId"},(0,a.kt)("inlineCode",{parentName:"h3"},"toJsonWithId()")),(0,a.kt)("p",null,"Serializes the tag to a format which can be represented by JSON, also including the ID."),(0,a.kt)("h3",{id:"toBytes"},(0,a.kt)("inlineCode",{parentName:"h3"},"toBytes(output)")),(0,a.kt)("p",null,"Writes the bytes of this tag to the ",(0,a.kt)("a",{parentName:"p",href:"../dataoutput"},(0,a.kt)("inlineCode",{parentName:"a"},"DataOutput")),"."),(0,a.kt)("h2",{id:"static-methods"},"Static methods"),(0,a.kt)("h3",{id:"create"},(0,a.kt)("inlineCode",{parentName:"h3"},"create(id)"),":"),(0,a.kt)("p",null,"Creates an ",(0,a.kt)("inlineCode",{parentName:"p"},"NbtTag")," of a certain type with default values."),(0,a.kt)("h3",{id:"fromString"},(0,a.kt)("inlineCode",{parentName:"h3"},"fromString(input)")),(0,a.kt)("p",null,"Parses an SNBT string to get an NbtTag. ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," can be either a ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," or a ",(0,a.kt)("inlineCode",{parentName:"p"},"StringReader"),"."),(0,a.kt)("h3",{id:"fromJson"},(0,a.kt)("inlineCode",{parentName:"h3"},"fromJson(value, id)")),(0,a.kt)("p",null,"Turns the serialized format created by ",(0,a.kt)("a",{parentName:"p",href:"#toJson"},(0,a.kt)("inlineCode",{parentName:"a"},"toJson()"))," back into an ",(0,a.kt)("inlineCode",{parentName:"p"},"NbtTag"),"."),(0,a.kt)("h3",{id:"fromJsonWithId"},(0,a.kt)("inlineCode",{parentName:"h3"},"fromJsonWithId(value)")),(0,a.kt)("p",null,"Turns the serialized format created by ",(0,a.kt)("a",{parentName:"p",href:"#toJsonWithId"},(0,a.kt)("inlineCode",{parentName:"a"},"toJsonWithId()"))," back into an ",(0,a.kt)("inlineCode",{parentName:"p"},"NbtTag"),"."),(0,a.kt)("h3",{id:"fromBytes"},(0,a.kt)("inlineCode",{parentName:"h3"},"fromBytes(input, id)")),(0,a.kt)("p",null,"Reads the bytes from the ",(0,a.kt)("a",{parentName:"p",href:"../datainput"},(0,a.kt)("inlineCode",{parentName:"a"},"DataInput"))," to create an ",(0,a.kt)("inlineCode",{parentName:"p"},"NbtTag"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," defaults to a compound if not given."))}u.isMDXComponent=!0}}]);